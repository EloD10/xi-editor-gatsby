{"version":3,"sources":["webpack:///./src/pages/building-docs.js","webpack:///./src/components/content.js"],"names":["BuildindDocsTemplate","_ref","title","contentComponent","content","helmet","PostContent","Content","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","className","propTypes","PropTypes","node","isRequired","func","description","string","object","query","BuildindDocs","_ref2","data","site","siteMetadata","_components_layout__WEBPACK_IMPORTED_MODULE_5__","HTMLContent","markdownRemark","frontmatter","html","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","titleSeparator","name","Wrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","styles","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","dangerouslySetInnerHTML","__html"],"mappings":"8PAQaA,EAAuB,SAAAC,GAK9B,IAJJC,EAIID,EAJJC,MACAC,EAGIF,EAHJE,iBACAC,EAEIH,EAFJG,QACAC,EACIJ,EADJI,OAEMC,EAAcH,GAAoBI,IACxC,OACEC,OAAAC,EAAA,IAAAD,CAAA,eACGH,GAAU,GACXG,OAAAC,EAAA,IAAAD,CAAA,MAAIE,UAAU,0CAA0CR,GACxDM,OAAAC,EAAA,IAAAD,CAACF,EAAD,CAAaF,QAASA,EAASM,UAAU,mBAK/CV,EAAqBW,UAAY,CAC/BP,QAASQ,IAAUC,KAAKC,WACxBX,iBAAkBS,IAAUG,KAC5BC,YAAaJ,IAAUK,OACvBf,MAAOU,IAAUK,OAAOH,WACxBT,OAAQO,IAAUM,QAGpB,IAoBaC,EAAK,aAmBHC,UAvCM,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAChBC,EAAOD,EAAKC,KAAKC,aACvB,OACEhB,OAAAC,EAAA,IAAAD,CAACiB,EAAA,EAAD,KACEjB,OAAAC,EAAA,IAAAD,CAACR,EAAD,CACEG,iBAAkBuB,IAClBxB,MAAOoB,EAAKK,eAAeC,YAAY1B,MACvCE,QAASkB,EAAKK,eAAeE,KAC7BxB,OACEG,OAAAC,EAAA,IAAAD,CAACsB,EAAAC,EAAD,CAAQ7B,MAAK,IAAMqB,EAAKrB,MAAX,IAAoBqB,EAAKS,eAAzB,eACXxB,OAAAC,EAAA,IAAAD,CAAA,QACEyB,KAAK,cACL7B,QAAO,GAAKkB,EAAKK,eAAeC,YAAYZ,gICxCpDkB,EAAU1B,OAAA2B,EAAA,EAAA3B,CAAA,OAAH4B,OAAA,YAAG5B,CAAH,CAAAyB,KAAA,SAAAI,OAAA,kXA0CAX,EAAc,SAAAzB,GAAA,IAAGG,EAAHH,EAAGG,QAASM,EAAZT,EAAYS,UAAZ,OACzBF,OAAA8B,EAAA,IAAA9B,CAAC0B,EAAD,CACExB,UAAWA,EACX6B,wBAAyB,CAAEC,OAAQpC,MAIjCG,EAAU,SAAAc,GAAA,IAAGjB,EAAHiB,EAAGjB,QAASM,EAAZW,EAAYX,UAAZ,OACdF,OAAA8B,EAAA,IAAA9B,CAAA,OAAKE,UAAWA,GAAYN,IAG9BG,EAAQI,UAAY,CAClBP,QAASQ,IAAUC,KACnBH,UAAWE,IAAUK,QAGvBS,EAAYf,UAAYJ,EAAQI,UAEjBJ","file":"component---src-pages-building-docs-js-2ca74637d76e4a997de6.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Content, { HTMLContent } from '../components/content'\r\nimport Layout from '../components/layout'\r\n\r\nexport const BuildindDocsTemplate = ({\r\n  title,\r\n  contentComponent,\r\n  content,\r\n  helmet,\r\n}) => {\r\n  const PostContent = contentComponent || Content\r\n  return (\r\n    <section>\r\n      {helmet || ''}\r\n      <h1 className=\"mx-4 md:mx-0 mt-4 font-medium text-4xl\">{title}</h1>\r\n      <PostContent content={content} className=\"ml-4 lg:ml-0\" />\r\n    </section>\r\n  )\r\n}\r\n\r\nBuildindDocsTemplate.propTypes = {\r\n  content: PropTypes.node.isRequired,\r\n  contentComponent: PropTypes.func,\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  helmet: PropTypes.object,\r\n}\r\n\r\nconst BuildindDocs = ({ data }) => {\r\n  const site = data.site.siteMetadata\r\n  return (\r\n    <Layout>\r\n      <BuildindDocsTemplate\r\n        contentComponent={HTMLContent}\r\n        title={data.markdownRemark.frontmatter.title}\r\n        content={data.markdownRemark.html}\r\n        helmet={\r\n          <Helmet title={` ${site.title} ${site.titleSeparator} Contribute`}>\r\n            <meta\r\n              name=\"description\"\r\n              content={`${data.markdownRemark.frontmatter.description}`}\r\n            />\r\n          </Helmet>\r\n        }\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\nexport const query = graphql`\r\n  query {\r\n    markdownRemark(fields: { sourceName: { eq: \"build-docs\" } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        description\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        titleSeparator\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BuildindDocs\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from '@emotion/styled'\r\n\r\nconst Wrapper = styled.div`\r\n  * {\r\n    color: rgba(0, 0, 0, 0.87);\r\n  }\r\n  & > ${'p'} {\r\n    display: block !important;\r\n    justify-content: start;\r\n    color: #462a16;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  & > ${'h2'} {\r\n    color: #f6993f;\r\n  }\r\n\r\n  & > ${'h2'}, & > ${'h3'}, & > ${'h4'} {\r\n    margin-top: 2rem;\r\n    margin-bottom: 1rem;\r\n    color: #34515e;\r\n  }\r\n\r\n  & > ${'p'} > ${'img'} {\r\n    max-width: 20rem;\r\n  }\r\n\r\n  ul {\r\n    margin-left: 2rem;\r\n    padding: 0;\r\n  }\r\n\r\n  ul > li {\r\n    margin-top: 0.8rem;\r\n    margin-bottom: 0.8rem;\r\n  }\r\n\r\n  /* img {\r\n    display: block !important;\r\n  } */\r\n`\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <Wrapper\r\n    className={className}\r\n    dangerouslySetInnerHTML={{ __html: content }}\r\n  />\r\n)\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n)\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n}\r\n\r\nHTMLContent.propTypes = Content.propTypes\r\n\r\nexport default Content\r\n"],"sourceRoot":""}