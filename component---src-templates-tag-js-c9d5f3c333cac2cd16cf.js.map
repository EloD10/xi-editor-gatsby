{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/utils/kebabCase.js"],"names":["Tag","render","posts","this","props","data","allMarkdownRemark","edges","site","siteMetadata","tag","pageContext","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","title","titleSeparator","className","toKebabCase","map","_ref","post","node","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","frontmatter","React","Component","query","module","exports","item","toLowerCase","split","join"],"mappings":"uOAQMA,4FACJC,kBAAS,IACQC,EAAUC,KAAKC,MAAMC,KAAKC,kBAAjCC,MACcC,EAASL,KAAKC,MAAMC,KAAKG,KAAvCC,aACFC,EAAMP,KAAKC,MAAMO,YAAYD,IAEnC,OACEE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,IAAAD,CAACG,EAAAC,EAAD,CAAQC,MAAK,IAAMT,EAAKS,MAAX,IAAoBT,EAAKU,eAAzB,SACbN,OAAAC,EAAA,IAAAD,CAAA,MAAIO,UAAU,yBAAyBC,IAAYV,IACnDE,OAAAC,EAAA,IAAAD,CAAA,OAAKO,UAAU,4DACZjB,EAAMmB,IAAI,SAAAC,GAAA,IAASC,EAATD,EAAGE,KAAH,OACTZ,OAAAC,EAAA,IAAAD,CAACa,EAAA,KAAD,CACEC,GAAIH,EAAKI,OAAOC,KAChBT,UAAU,8DAETI,EAAKM,YAAYZ,eAhBda,IAAMC,WAyBXC,EAAK,aA4BHhC,uCCpDfiC,EAAOC,QATP,SAAqBC,GACnB,OAAOA,EACJC,cACAC,MAAM,KACNC,KAAK,KACLD,MAAM,KACNC,KAAK","file":"component---src-templates-tag-js-c9d5f3c333cac2cd16cf.js","sourcesContent":["import React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\n\r\nimport toKebabCase from '../utils/kebabCase'\r\n\r\nimport Layout from '../components/layout'\r\n\r\nclass Tag extends React.Component {\r\n  render() {\r\n    const { edges: posts } = this.props.data.allMarkdownRemark\r\n    const { siteMetadata: site } = this.props.data.site\r\n    const tag = this.props.pageContext.tag\r\n\r\n    return (\r\n      <Layout>\r\n        <Helmet title={` ${site.title} ${site.titleSeparator} Tag`} />\r\n        <h1 className=\"text-purple-dark my-8\">{toKebabCase(tag)}</h1>\r\n        <div className=\"flex flex-col my-8 bg-purple-lightest px-10 py-6 rounded\">\r\n          {posts.map(({ node: post }) => (\r\n            <Link\r\n              to={post.fields.slug}\r\n              className=\"text-lg my-2 text-purple-dark no-underline hover:underline\"\r\n            >\r\n              {post.frontmatter.title}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const query = graphql`\r\n  query($tag: String!) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Tag\r\n","function toKebabCase(item) {\r\n  return item\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .join('-')\r\n    .split('.')\r\n    .join('')\r\n}\r\n\r\nmodule.exports = toKebabCase\r\n"],"sourceRoot":""}