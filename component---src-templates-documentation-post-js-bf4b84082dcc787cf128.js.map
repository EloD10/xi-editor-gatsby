{"version":3,"sources":["webpack:///./src/templates/documentation-post.js","webpack:///./src/components/content.js","webpack:///./src/components/layoutWithLeftNav.js"],"names":["DocumentationPostTemplate","_ref","content","contentComponent","title","helmet","PostContent","Content","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","className","propTypes","PropTypes","node","isRequired","func","string","object","DocumentationPost","render","documentation","this","props","data","markdownRemark","navBar","allMarkdownRemark","edges","site","siteMetadata","_components_layoutWithLeftNav__WEBPACK_IMPORTED_MODULE_6__","path","html","HTMLContent","frontmatter","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","titleSeparator","name","React","Component","shape","query","Wrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","styles","dangerouslySetInnerHTML","__html","_ref2","LayoutWithLeftNav","children","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layout__WEBPACK_IMPORTED_MODULE_4__","centered","map","item","gatsby__WEBPACK_IMPORTED_MODULE_1__","key","id","to","fields","slug","activeClassName","array"],"mappings":"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","file":"component---src-templates-documentation-post-js-bf4b84082dcc787cf128.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Content, { HTMLContent } from '../components/content'\r\nimport LayoutWithLeftNav from '../components/layoutWithLeftNav'\r\n\r\nexport const DocumentationPostTemplate = ({\r\n  content,\r\n  contentComponent,\r\n  title,\r\n  helmet,\r\n}) => {\r\n  const PostContent = contentComponent || Content\r\n\r\n  return (\r\n    <section className=\"lg:flex h-full\">\r\n      {helmet || ''}\r\n      <div className=\"lg:w-3/4 xl:w-4/5\">\r\n        <h1 className=\"ml-4 lg:ml-0 text-xi-blue-dark mt-8 mb-4\">{title}</h1>\r\n        <PostContent content={content} className=\"ml-4 lg:ml-0\" />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nDocumentationPostTemplate.propTypes = {\r\n  content: PropTypes.node.isRequired,\r\n  contentComponent: PropTypes.func,\r\n  title: PropTypes.string,\r\n  helmet: PropTypes.object,\r\n}\r\n\r\nclass DocumentationPost extends React.Component {\r\n  render() {\r\n    const { markdownRemark: documentation } = this.props.data\r\n    const { edges: navBar } = this.props.data.allMarkdownRemark\r\n    const { siteMetadata: site } = this.props.data.site\r\n\r\n    return (\r\n      <LayoutWithLeftNav data={navBar} path=\"documentation\">\r\n        <DocumentationPostTemplate\r\n          content={documentation.html}\r\n          contentComponent={HTMLContent}\r\n          title={documentation.frontmatter.title}\r\n          helmet={\r\n            <Helmet\r\n              title={` ${site.title} ${site.titleSeparator} Documentation`}\r\n            >\r\n              <meta\r\n                name=\"description\"\r\n                content={`${documentation.frontmatter.title}`}\r\n              />\r\n            </Helmet>\r\n          }\r\n        />\r\n      </LayoutWithLeftNav>\r\n    )\r\n  }\r\n}\r\n\r\nDocumentationPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport const query = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        titleSeparator\r\n      }\r\n    }\r\n\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      filter: { fields: { sourceName: { eq: \"docs\" } } }\r\n      sort: { fields: frontmatter___site_nav_category_order }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default DocumentationPost\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from '@emotion/styled'\r\n\r\nconst Wrapper = styled.div`\r\n  * {\r\n    color: rgba(0, 0, 0, 0.87);\r\n  }\r\n  & > ${'p'} {\r\n    display: block !important;\r\n    justify-content: start;\r\n    color: #462a16;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  & > ${'h2'} {\r\n    color: #f6993f;\r\n  }\r\n\r\n  & > ${'h2'}, & > ${'h3'}, & > ${'h4'} {\r\n    margin-top: 2rem;\r\n    margin-bottom: 1rem;\r\n    color: #34515e;\r\n  }\r\n\r\n  & > ${'p'} > ${'img'} {\r\n    max-width: 20rem;\r\n  }\r\n\r\n  ul {\r\n    margin-left: 2rem;\r\n    padding: 0;\r\n  }\r\n\r\n  ul > li {\r\n    margin-top: 0.8rem;\r\n    margin-bottom: 0.8rem;\r\n  }\r\n\r\n  /* img {\r\n    display: block !important;\r\n  } */\r\n`\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <Wrapper\r\n    className={className}\r\n    dangerouslySetInnerHTML={{ __html: content }}\r\n  />\r\n)\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n)\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n}\r\n\r\nHTMLContent.propTypes = Content.propTypes\r\n\r\nexport default Content\r\n","import { Link } from 'gatsby'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Layout from './layout'\r\n\r\nconst LayoutWithLeftNav = ({ children, data, path }) => {\r\n  return (\r\n    <Layout centered={false}>\r\n      <div className=\"flex\">\r\n        <div className=\"w-1/6 h-full flex-no-shrink\">\r\n          <ul className=\"list-reset p-4 flex flex-col\">\r\n            {data.map(({ node: item }) => (\r\n              <Link\r\n                key={item.id}\r\n                to={`/${path}${item.fields.slug}`}\r\n                className=\"no-underline text-xi-blue-dark p-2 hover:bg-blue-lightest text-sm\"\r\n                activeClassName=\"bg-blue-lightest border\"\r\n              >\r\n                {item.frontmatter.title}\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"flex-1 flex-wrap mb-32\">{children}</div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nLayoutWithLeftNav.propTypes = {\r\n  children: PropTypes.node,\r\n  data: PropTypes.array,\r\n  path: PropTypes.string,\r\n}\r\n\r\nexport default LayoutWithLeftNav\r\n"],"sourceRoot":""}