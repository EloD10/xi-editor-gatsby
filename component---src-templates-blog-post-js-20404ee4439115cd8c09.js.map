{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/content.js"],"names":["BlogPostTemplate","_ref","content","contentComponent","description","title","helmet","PostContent","Content","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","className","propTypes","PropTypes","node","isRequired","func","string","object","Post","render","post","this","props","data","markdownRemark","site","siteMetadata","_components_layout__WEBPACK_IMPORTED_MODULE_6__","html","HTMLContent","frontmatter","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","titleSeparator","name","React","Component","shape","query","Wrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","styles","dangerouslySetInnerHTML","__html","_ref2"],"mappings":"oRAUaA,EAAmB,SAAAC,GAO1B,IANJC,EAMID,EANJC,QACAC,EAKIF,EALJE,iBACAC,EAIIH,EAJJG,YAEAC,EAEIJ,EAFJI,MACAC,EACIL,EADJK,OAEMC,EAAcJ,GAAoBK,IAExC,OACEC,OAAAC,EAAA,IAAAD,CAAA,WAASE,UAAU,kBAChBL,GAAU,GACXG,OAAAC,EAAA,IAAAD,CAAA,OAAKE,UAAU,qBACbF,OAAAC,EAAA,IAAAD,CAAA,MAAIE,UAAU,uCAAuCN,GACrDI,OAAAC,EAAA,IAAAD,CAAA,OAAKE,UAAU,+DACfF,OAAAC,EAAA,IAAAD,CAAA,KAAGE,UAAU,4CACVP,GAEHK,OAAAC,EAAA,IAAAD,CAACF,EAAD,CAAaL,QAASA,EAASS,UAAU,oBA4BjDX,EAAiBY,UAAY,CAC3BV,QAASW,IAAUC,KAAKC,WACxBZ,iBAAkBU,IAAUG,KAC5BZ,YAAaS,IAAUI,OAEvBZ,MAAOQ,IAAUI,OACjBX,OAAQO,IAAUK,YAGdC,4FACJC,kBAAS,IACiBC,EAASC,KAAKC,MAAMC,KAApCC,eACcC,EAASJ,KAAKC,MAAMC,KAAKE,KAAvCC,aAER,OACElB,OAAAC,EAAA,IAAAD,CAACmB,EAAA,EAAD,KACEnB,OAAAC,EAAA,IAAAD,CAACT,EAAD,CACEE,QAASmB,EAAKQ,KACd1B,iBAAkB2B,IAClB1B,YAAaiB,EAAKU,YAAY3B,YAE9BC,MAAOgB,EAAKU,YAAY1B,MACxBC,OACEG,OAAAC,EAAA,IAAAD,CAACuB,EAAAC,EAAD,CAAQ5B,MAAK,IAAMqB,EAAKrB,MAAX,IAAoBqB,EAAKQ,eAAzB,SACXzB,OAAAC,EAAA,IAAAD,CAAA,QACE0B,KAAK,cACLjC,QAAO,GAAKmB,EAAKU,YAAY3B,sBAjB1BgC,IAAMC,WA2BzBlB,EAAKP,UAAY,CACfY,KAAMX,IAAUyB,MAAM,CACpBb,eAAgBZ,IAAUK,UAIvB,IAAMqB,EAAK,YAqBHpB,yHCpHTqB,EAAU/B,OAAAgC,EAAA,EAAAhC,CAAA,OAAHiC,OAAA,YAAGjC,CAAH,CAAA0B,KAAA,SAAAQ,OAAA,kXA0CAb,EAAc,SAAA7B,GAAA,IAAGC,EAAHD,EAAGC,QAASS,EAAZV,EAAYU,UAAZ,OACzBF,OAAAC,EAAA,IAAAD,CAAC+B,EAAD,CACE7B,UAAWA,EACXiC,wBAAyB,CAAEC,OAAQ3C,MAIjCM,EAAU,SAAAsC,GAAA,IAAG5C,EAAH4C,EAAG5C,QAASS,EAAZmC,EAAYnC,UAAZ,OACdF,OAAAC,EAAA,IAAAD,CAAA,OAAKE,UAAWA,GAAYT,IAG9BM,EAAQI,UAAY,CAClBV,QAASW,IAAUC,KACnBH,UAAWE,IAAUI,QAGvBa,EAAYlB,UAAYJ,EAAQI,UAEjBJ","file":"component---src-templates-blog-post-js-20404ee4439115cd8c09.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\n\r\n// import toKebabCase from '../utils/kebabCase'\r\n\r\nimport Content, { HTMLContent } from '../components/content'\r\nimport Layout from '../components/layout'\r\n\r\nexport const BlogPostTemplate = ({\r\n  content,\r\n  contentComponent,\r\n  description,\r\n  // tags,\r\n  title,\r\n  helmet,\r\n}) => {\r\n  const PostContent = contentComponent || Content\r\n\r\n  return (\r\n    <section className=\"lg:flex h-full\">\r\n      {helmet || ''}\r\n      <div className=\"lg:w-3/4 xl:w-4/5\">\r\n        <h1 className=\"ml-4 lg:ml-0 text-xi-blue-dark mt-8\">{title}</h1>\r\n        <div className=\"ml-4 lg:ml-0 border-t-4 border-xi-blue-dark w-24 mt-4 mb-8\" />\r\n        <p className=\"ml-4 lg:ml-0 mb-8 text-xi-blue font-bold\">\r\n          {description}\r\n        </p>\r\n        <PostContent content={content} className=\"ml-4 lg:ml-0\" />\r\n      </div>\r\n      {/* {tags && tags.length ? (\r\n        <div className=\"lg:w-3/4 xl:w-1/5 mt-8 ml-4\">\r\n          <div className=\"ml-4 lg:ml-0 mb-2 text-lg font-bold text-purple\">\r\n            Tags:\r\n          </div>\r\n          <div className=\"ml-4 lg:ml-0 flex flex-wrap\">\r\n            {tags.map((tag, i) => (\r\n              <div\r\n                className={`w-1/3 mb-4 bg-purple rounded px-2 h-10 flex items-center justify-center mr-4`}\r\n                key={toKebabCase(tag) + 'tags'}\r\n              >\r\n                <Link\r\n                  to={`/tags/${toKebabCase(tag)}`}\r\n                  className=\"text-orange-lightest no-underline\"\r\n                >\r\n                  {toKebabCase(tag)}\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : null} */}\r\n    </section>\r\n  )\r\n}\r\n\r\nBlogPostTemplate.propTypes = {\r\n  content: PropTypes.node.isRequired,\r\n  contentComponent: PropTypes.func,\r\n  description: PropTypes.string,\r\n  // tags: PropTypes.array,\r\n  title: PropTypes.string,\r\n  helmet: PropTypes.object,\r\n}\r\n\r\nclass Post extends React.Component {\r\n  render() {\r\n    const { markdownRemark: post } = this.props.data\r\n    const { siteMetadata: site } = this.props.data.site\r\n\r\n    return (\r\n      <Layout>\r\n        <BlogPostTemplate\r\n          content={post.html}\r\n          contentComponent={HTMLContent}\r\n          description={post.frontmatter.description}\r\n          // tags={post.frontmatter.tags}\r\n          title={post.frontmatter.title}\r\n          helmet={\r\n            <Helmet title={` ${site.title} ${site.titleSeparator} Blog`}>\r\n              <meta\r\n                name=\"description\"\r\n                content={`${post.frontmatter.description}`}\r\n              />\r\n            </Helmet>\r\n          }\r\n        />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport const query = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        description\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        titleSeparator\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from '@emotion/styled'\r\n\r\nconst Wrapper = styled.div`\r\n  * {\r\n    color: rgba(0, 0, 0, 0.87);\r\n  }\r\n  & > ${'p'} {\r\n    display: block !important;\r\n    justify-content: start;\r\n    color: #462a16;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  & > ${'h2'} {\r\n    color: #f6993f;\r\n  }\r\n\r\n  & > ${'h2'}, & > ${'h3'}, & > ${'h4'} {\r\n    margin-top: 2rem;\r\n    margin-bottom: 1rem;\r\n    color: #34515e;\r\n  }\r\n\r\n  & > ${'p'} > ${'img'} {\r\n    max-width: 20rem;\r\n  }\r\n\r\n  ul {\r\n    margin-left: 2rem;\r\n    padding: 0;\r\n  }\r\n\r\n  ul > li {\r\n    margin-top: 0.8rem;\r\n    margin-bottom: 0.8rem;\r\n  }\r\n\r\n  /* img {\r\n    display: block !important;\r\n  } */\r\n`\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <Wrapper\r\n    className={className}\r\n    dangerouslySetInnerHTML={{ __html: content }}\r\n  />\r\n)\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n)\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n}\r\n\r\nHTMLContent.propTypes = Content.propTypes\r\n\r\nexport default Content\r\n"],"sourceRoot":""}